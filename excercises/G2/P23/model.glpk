set recursos;
set productos;

param consumo{i in productos, j in recursos};
param disponibilidad{j in recursos};
param costo{j in recursos};
param precioReventa{j in recursos};
param precio{i in productos};

param cajaInicial := 30000;
param minCajaFinal := 45000;
param maxPrestamo := 20000;
param interesSobrante := 0.005;
param interesPrestamo := 0.01;

# Recursos

var rec_prod{j in recursos} >= 0;
var rec_vent{j in recursos} >= 0;

s.t. rec_tot{ j in recursos }: disponibilidad[j] >= rec_prod[j] + rec_vent[j]; 

# ProducciÃ³n de productos

var prod{ i in productos } >= 0;

s.t. consumo_rec{ j in recursos}: rec_prod[j] = sum{ i in productos } prod[i] * consumo[i, j];

# Ganancia y Costo de Productos y Recursos

var gain >= 0;
s.t. _gain: gain = (sum{ i in productos } precio[i] * prod[i]) + ( sum{ j in recursos } (precioReventa[j] * rec_vent[j]) );

var cost >= 0;
s.t. _cost: cost = sum{ j in recursos } costo[j] * ( rec_prod[j] + rec_vent[j] );

# Finanzas

var prestamo >= 0;
var sobrante >= 0;

s.t. _minCajaFinal: minCajaFinal <= cajaInicial + gain - cost 
  + prestamo - interesPrestamo * prestamo
  - sobrante + interesSobrante * sobrante;

# Funcional

maximize z: gain - cost - interesPrestamo * prestamo + interesSobrante * sobrante;

data;

set recursos := HH HM MP;
set productos E K S;

param consumo: HH HM MP :=
  E 3 3 3
  K 4 5 6
  S 7 8 9;

param disponibilidad :=
  HH 2500
  HM 1000
  MP 5000;

param costo :=
  HH 5
  HM 7
  MP 2;

param precioReventa :=
  HH 4
  HM 8
  MP 2;

param precio :=
  E 100
  K 150
  S 200;

end;